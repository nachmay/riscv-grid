// 
//###############################################################################
//#                                                    
//#        Technology     : TSMC 16nm CMOS Logic FinFet (FFC) HKMG
//#        Memory Type    : TSMC 16nm FFC Two Port Register File with d130 bit cell
//#        Library Name   : ts6n16ffcllsvta16x32m2fw (user specify : ts6n16ffcllsvta16x32m2fw)
//#        Library Version: 170a
//#        Generated Time : 2025/06/18, 12:58:42
//###############################################################################
//# STATEMENT OF USE                                                             
//#                                                                              
//#  This information contains confidential and proprietary information of TSMC. 
//# No part of this information may be reproduced, transmitted, transcribed,     
//# stored in a retrieval system, or translated into any human or computer       
//# language, in any form or by any means, electronic, mechanical, magnetic,     
//# optical, chemical, manual, or otherwise, without the prior written permission
//# of TSMC. This information was prepared for informational purpose and is for  
//# use by TSMC's customers only. TSMC reserves the right to make changes in the 
//# inforrmation at any time and without notice.                                 
//
//###############################################################################

//* Template Version : S_09_71501   
MemoryTemplate (TS6N16FFCLLSVTA16X32M2FW) {

    CellName        : TS6N16FFCLLSVTA16X32M2FW;
    ShadowRead 	    : On;
    ShadowWrite     : On;
    ShadowWriteOK   : On;
    Algorithm       : SMarchCHKBvcd;
    logicalPorts    : 1R1W;
    NumberOfWords   : 16;
    MinHold         : 0.5;
    MilliWattsPerMegaHertz : 0.003;
    TransparentMode : None;  // User options for DFT:
		 	 	    // AsyncMux:    for low speed scan
				    // SyncMux:     for at-speed scan
				    // AsyncWriteThru: if there is AWT in this memory
    Port (CLKW)  {
        Function: Clock;
        LogicalPort:	A;
    }
    
    Port (CLKR)  {
        Function: Clock;
        LogicalPort:	B;
    }
    
    Port (REB)  {
        Function: ReadEnable;
        Polarity: ActiveLow;	
        LogicalPort:	B;
    }
    
    Port (WEB) {
        Function: WriteEnable; 
        Polarity: ActiveLow;
        LogicalPort:	A;
    }
    
    port (AA[3:0]) {
        function:    address;
        LogicalPort:	A;
    }
    
    port (AB[3:0]) {
        function:    address;
        LogicalPort:	B;
    }
    
    Port (BWEB[31:0]) {
        Function: GroupWriteEnable; 
        LogicalPort:	A;
        Polarity: ActiveLow;
    }
    
    Port (D[31:0]) { 
        Function: Data; 
        Direction:   Input;
        LogicalPort:	A;
    }
    
    Port (Q[31:0]) { 
        Function: Data; 
        LogicalPort:	B;
        Direction:   Output; 
    }








      Port (RCT[1:0]) {
          Direction : Input;
	  function  : None;
    SafeValue : 2'b01;
      }
      Port (WCT[1:0]) {
          Direction : Input;
	  function  : None;
    SafeValue : 2'b01;
      }
      Port (KP[2:0]) {
          Direction : Input;
	  function  : None;
    SafeValue : 3'b011;
      }






    
// 8 rows by 2 columns.
    AddressCounter {

      
	Function ( ColumnAddress ) {
            LogicalAddressMap {
                ColumnAddress[0:0]:Address[0:0];  // 2 columns
            }
            CountRange [0:1];
        }
      
	
        Function  ( RowAddress ) {
            LogicalAddressMap {
                RowAddress[2:0]:Address[3:1];  // 8 rows
            }
            CountRange [0:7];
        }
    }
    
 
    OperationSet : syncWR;
    bitGrouping : 1;
}

